{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavItem","handleClick","props","onClick","index","className","this","href","link","isActive","name","React","App","useState","activeIndex","setActiveIndex","navClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAuDMA,E,4MACJC,YAAc,kBAAM,EAAKC,MAAMC,QAAQ,EAAKD,MAAME,Q,4CAElD,WACE,OAAO,oBAAIC,UAAU,WAAd,SACHC,KAAKJ,MAAME,OAAS,EACpB,mBACEG,KAAMD,KAAKJ,MAAMM,KACjBH,UAAWC,KAAKJ,MAAMO,SAAW,qBAAuB,GACxDN,QAASG,KAAKL,YAHhB,SAG8BK,KAAKJ,MAAMQ,OAGzC,mBACEL,UAAWC,KAAKJ,MAAMO,SAAW,qBAAuB,GACxDN,QAASG,KAAKL,YAFhB,SAE8BK,KAAKJ,MAAMQ,a,GAd3BC,aAqBPC,EApEf,WAAgB,IAAD,EAEyBC,mBAAS,GAFlC,mBAENC,EAFM,KAEOC,EAFP,KAIPC,EAAW,SAACZ,GAChBW,EAAeX,GACfa,QAAQC,IAAI,WAAYJ,IAO1B,OACE,qBAAKT,UAAU,MAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,CAASG,KAAK,IAAIJ,MAAO,EAAGK,SAA0B,IAAhBK,EAAmBX,QAASa,EAAUN,KAAK,eACjF,cAAC,EAAD,CAASF,KAAK,IAAIJ,MAAO,EAAGK,SAA0B,IAAhBK,EAAmBX,QAASa,EAAUN,KAAK,UACjF,cAAC,EAAD,CAASF,KAAK,IAAIJ,MAAO,EAAGK,SAA0B,IAAhBK,EAAmBX,QAASa,EAAUN,KAAK,UACjF,cAAC,EAAD,CAASF,KARA,yDAQcJ,MAAO,EAAGK,SAA0B,IAAhBK,EAAmBX,QAASa,EAAUN,KAAK,oBACtF,cAAC,EAAD,CAASF,KAXE,wCAWcJ,MAAO,EAAGK,SAA0B,IAAhBK,EAAmBX,QAASa,EAAUN,KAAK,sBACxF,cAAC,EAAD,CAASF,KAXA,+BAWcJ,MAAO,EAAGK,SAA0B,IAAhBK,EAAmBX,QAASa,EAAUN,KAAK,0BCf/ES,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70ff139c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport './App.css';\n\n/**\nApp\n  Single Page Application.\n*/\nfunction App() {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const navClick = (index: number) => {\n    setActiveIndex(index);\n    console.log(\"clicked:\", activeIndex);\n  };\n\n  const linkedin = \"https://linkedin.com/in/thatnealpatel\";\n  const github = \"https://github.com/nealdotpy\";\n  const resume = \"https://nealdotpy.dev/static/media/resume.ce359c80.pdf\";\n\n  return (\n    <div className=\"App\">\n      <nav className=\"min-nav no-select\">\n        <NavItem link=\"#\" index={0} isActive={activeIndex === 0} onClick={navClick} name=\"/neal.html\" />\n        <NavItem link=\"#\" index={1} isActive={activeIndex === 1} onClick={navClick} name=\"/doc/\" />\n        <NavItem link=\"#\" index={2} isActive={activeIndex === 2} onClick={navClick} name=\"/src/\" />\n        <NavItem link={resume} index={3} isActive={activeIndex === 3} onClick={navClick} name=\"/ext/resume.pdf\" />\n        <NavItem link={linkedin} index={4} isActive={activeIndex === 4} onClick={navClick} name=\"/ext/linkedin.txt\" /> \n        <NavItem link={github} index={5} isActive={activeIndex === 5} onClick={navClick} name=\"/ext/github.txt\" />     \n      </nav>\n    </div>\n  );\n}\n\n\n/*\nNavItem\n  Abstraction for nav elements.\n  Takes NavItemProps in order to faciliate dynamic class assignment.\n  Additionally, there exists one hard-coded component: \n    this.props.index >= 3 :: indicates that NavItem's with index gte 3 \n    are externally linked elements, while all else renders on page.\n*/\ninterface NavItemProps {\n  link: string;\n  index: number;\n  isActive: boolean;\n  onClick: Function;\n  name: string;\n}\n\ninterface NavItemState {\n}\n\nclass NavItem extends React.Component<NavItemProps, NavItemState> {\n  handleClick = () => this.props.onClick(this.props.index)\n\n  render() {\n    return <li className=\"nav-item\">\n      { this.props.index >= 3 ?\n        <a \n          href={this.props.link}\n          className={this.props.isActive ? 'nav-item__selected' : ''} \n          onClick={this.handleClick}>{this.props.name}\n        </a>\n        :\n        <a\n          className={this.props.isActive ? 'nav-item__selected' : ''} \n          onClick={this.handleClick}>{this.props.name}\n        </a>\n      }\n    </li>\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}